<!-- Analytics Section with Live Users Graph -->
<section class="analytics fade-in-section">
    <div class="container">
        <h2>TechZen Growth Metrics</h2>
        <p>Watch our community grow in real-time as tech enthusiasts join our platform</p>
        <div class="stats-container">
            <div class="stats-card">
                <h3>Daily Active Users</h3>
                <div class="chart-container">
                    <canvas id="usersChart"></canvas>
                </div>
                <p class="stats-detail">Real-time user activity monitoring</p>
            </div>
            <div class="stats-overview">
                <div class="stat-item">
                    <span class="stat-number" id="totalUsers">1.2M+</span>
                    <span class="stat-label">Total Users</span>
                </div>
                <div class="stat-item">
                    <span class="stat-number">154</span>
                    <span class="stat-label">Countries</span>
                </div>
                <div class="stat-item">
                    <span class="stat-number">98.7%</span>
                    <span class="stat-label">Satisfaction Rate</span>
                </div>
            </div>
        </div>
    </div>
</section>




    // Animation for sections on scroll
    document.addEventListener("DOMContentLoaded", function() {
        const fadeSections = document.querySelectorAll('.fade-in-section');
        
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('visible');
                }
            });
        }, { threshold: 0.1 });
        
        fadeSections.forEach(section => {
            observer.observe(section);
        });
        
        // Initialize users chart
        initUsersChart();
    });
    
    // Dynamic users chart that updates every 10 seconds
    function initUsersChart() {
        const ctx = document.getElementById('usersChart').getContext('2d');
        
        // Initialize with random data
        const initialData = {
            labels: Array.from({length: 12}, (_, i) => `${i+1}h`),
            datasets: [{
                label: 'Active Users',
                data: generateRandomData(12),
                borderColor: '#00c3ff',
                backgroundColor: 'rgba(0, 195, 255, 0.1)',
                borderWidth: 2,
                fill: true,
                tension: 0.4
            }]
        };
        
        const chart = new Chart(ctx, {
            type: 'line',
            data: initialData,
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: true,
                        labels: {
                            color: '#ffffff'
                        }
                    },
                    tooltip: {
                        mode: 'index',
                        intersect: false
                    }
                },
                scales: {
                    y: {
                        beginAtZero: false,
                        grid: {
                            color: 'rgba(255, 255, 255, 0.1)'
                        },
                        ticks: {
                            color: '#ffffff'
                        }
                    },
                    x: {
                        grid: {
                            display: false
                        },
                        ticks: {
                            color: '#ffffff'
                        }
                    }
                },
                interaction: {
                    intersect: false,
                    mode: 'index'
                },
                animation: {
                    duration: 1000
                }
            }
        });
        
        // Update chart every 10 seconds
        setInterval(() => {
            // Update data with random variations
            chart.data.datasets[0].data = generateRandomData(12);
            
            // Animate the transition to new data
            chart.update('active');
            
            // Also update total users with small increments for realistic effect
            updateTotalUsers();
        }, 10000);
    }
    
    // Generate random data for the chart
    function generateRandomData(length) {
        // Base value around which the data will fluctuate
        const baseValue = Math.floor(Math.random() * 3000) + 5000;
        return Array.from({length}, () => baseValue + Math.floor(Math.random() * 1000) - 500);
    }
    
    // Update the total users count randomly
    let totalUsers = 1200000; // Start at 1.2M
    function updateTotalUsers() {
        // Add between 5-20 new users for realistic growth
        totalUsers += Math.floor(Math.random() * 16) + 5;
        document.getElementById('totalUsers').textContent = (totalUsers / 1000000).toFixed(1) + 'M+';
    }


        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>



        /* Analytics Section */
        .analytics {
            background: rgba(30, 36, 64, 0.7);
            padding: 60px 0;
            backdrop-filter: blur(10px);
            border-radius: 10px;
            margin: 40px auto;
        }
        
        .stats-container {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
            margin-top: 30px;
            gap: 30px;
        }
        
        .stats-card {
            flex: 1;
            background: rgba(36, 43, 75, 0.6);
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
            min-width: 300px;
        }
        
        .chart-container {
            height: 300px;
            position: relative;
            margin: 20px 0;
        }
        
        .stats-overview {
            flex: 1;
            display: flex;
            flex-direction: column;
            justify-content: space-around;
            min-width: 300px;
        }
        
        .stat-item {
            background: rgba(36, 43, 75, 0.6);
            border-radius: 15px;
            padding: 20px;
            text-align: center;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        
        .stat-item:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 30px rgba(0, 195, 255, 0.2);
        }
        
        .stat-number {
            font-size: 2.5rem;
            font-weight: 700;
            color: #00c3ff;
            display: block;
            margin-bottom: 5px;
        }
        
        .stat-label {
            font-size: 1rem;
            color: #ccc;
        }
        
        .stats-detail {
            color: #ccc;
            font-style: italic;
            text-align: center;
            margin-top: 10px;
        }


                /* Analytics Section - New */
        .analytics-section {
            background: rgba(30, 36, 64, 0.7);
            padding: 60px 20px;
            border-radius: 20px;
            margin: 40px 20px;
            backdrop-filter: blur(10px);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
        }

        .analytics-container {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .stats-cards {
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
            gap: 30px;
            margin-bottom: 40px;
        }

        .stat-card {
            background: rgba(36, 43, 75, 0.8);
            padding: 25px;
            border-radius: 15px;
            text-align: center;
            width: 200px;
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
            border: 1px solid rgba(1, 219, 194, 0.2);
            transition: all 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 15px 30px rgba(1, 219, 194, 0.3);
        }

        .stat-number {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 10px;
            background: linear-gradient(45deg, #ffffff, #01dbc2);
            -webkit-background-clip: text;
            color: transparent;
        }

        .stat-label {
            color: #dcdcdc;
            font-size: 1rem;
        }

        .chart-container {
            width: 90%;
            max-width: 900px;
            height: 400px;
            margin-top: 30px;
            background: rgba(36, 43, 75, 0.5);
            padding: 20px;
            border-radius: 15px;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
            border: 1px solid rgba(1, 219, 194, 0.2);
        }